on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: Rituals

jobs:
  render:
    name: Rituals
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: ubuntu-18.04, r: 'release', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2
        name: Git Pull (master)
        if: github.event_name != 'pull_request'

      - uses: actions/checkout@v2
        name: Git Pull (PR)
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - uses: r-lib/actions/setup-r@v1
        id: install-r
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Install pak and query dependencies
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps_tree("local::.", dependencies = TRUE), ".github/r-depends.rds")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-rituals-2-${{ hashFiles('.github/r-depends.rds') }}
          restore-keys: |
            ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-rituals-2-
            ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-2-

      - name: Install linux system dependencies
        if: runner.os == 'Linux'
        shell: Rscript {0}
        run: |
          pak::local_system_requirements(execute = TRUE)
          pak::pkg_system_requirements("devtools", execute = TRUE)

      - name: Install dependencies
        shell: Rscript {0}
        run: |
          pak::local_install_dev_deps(upgrade = TRUE)
          pak::local_install(upgrade = TRUE)
          pak::pkg_install(c("devtools", "rmarkdown"))

      - name: Update ./README.md
        run: |
          Rscript -e 'devtools::build_readme(quiet = FALSE)'
          git add README.md || echo "README.md not updated"
          git commit -m 'Re-build README.Rmd (GitHub Action)' || echo "No README changes to commit"

      - name: Update ./data
        run: |
          Rscript data-raw/slt_demo_data.R
          git add man data || echo "No data updates to add"
          git commit -m 'Resave data (GitHub Action)' || echo "No data changes to commit"

      - name: Update documentation
        run: |
          Rscript -e 'pak::pkg_install("roxygen2")'
          Rscript -e 'roxygen2::roxygenise()'
          git add man NAMESPACE
          git commit -m 'Document (GitHub Actions)' || echo "No documentation changes to commit"

      - name: Git Push (PR)
        uses: r-lib/actions/pr-push@master
        if: github.event_name == 'pull_request'
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Git Push (MASTER)
        if: github.event_name == 'push'
        run: |
          git push https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git HEAD:${{ github.ref }} || echo "No changes to push"
